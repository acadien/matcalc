#!/usr/bin/python
import sys
import numpy

#mine
import poscarFixScale
from paircor import paircor #paircor(atoms,inloop=0,cutoff=10.0,nbins=1000):

def usage():
    print "Usage:"
    print sys.argv[0]+" <OUTCAR file>"

if len(sys.argv)<2:
    usage()
    exit(0)

outcarfile=sys.argv[1]
outcar = open(outcarfile,"r").readlines()


count=-1
while True:
    #Start a new configuration
    line=outcar.readline()
    if len(line)==0:
        break
    if "FORCE on cell" in line:
        count+=1
        while True:
            line=outcar.readline()
            if "direct lattice vectors" in line:
                line=outcar.readline()
                v1=" ".join(line.split()[0:3])
                line=outcar.readline()
                v2=" ".join(line.split()[0:3])
                line=outcar.readline()
                v3=" ".join(line.split()[0:3])
                break

        while True:
            line=outcar.readline()
            if "POSITION" in line:
                outcar.readline()
                posi=list()
                while True:
                    line=outcar.readline()
                    posi.append(" ".join(line.split()[0:3]))
                    if len(posi)==Natoms:
                        break
                break
        if count==wantconfig:
            break

#Generate the rest of the poscar and write it out, make sure to correct for direct output
if count>=0:
    wdat+=v1+"\n"
    wdat+=v2+"\n"
    wdat+=v3+"\n"
    wdat+=nums
    wdat+="Direct\n"
    for i in posi:
        wdat+=i+"\n"
    open(outpos,"w").writelines(wdat)
    fixposcarscale.fixposcarscale(outpos)
else:
    raise IOError("Unable to find desired POSCAR in OUTCAR.")
